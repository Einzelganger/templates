<!-- Please note that this is a suggested wording. Adapt it to your needs! -->


<finding threatLevel="Moderate" type="Information Disclosure" id="viewstate_information_disclosure">
<!-- edit: threatLevel -->

<title>ViewState Information Disclosure</title>

<description>
<p>The ViewState is unencrypted.</p>
</description>

<!-- edit: SCANTOOL how has the unencrypted viewstate been detected? burp or sth else? -->
<technicaldescription>
<p>The ViewState is a technique for retaining information between changes and requests for the same page.
It contains several items, as can be seen on the screenshot below depicting the output of SCANTOOL.
Sometimes the ViewState may contain sensitive information, such as usernames, passwords and session ids.
Currently, all this information is either in plain text or base64 encoded, which provides no encryption.</p>
<p>For more detailed information on this issue please consult these resources:</p>
<ul>
	<li>
		<a href="https://msdn.microsoft.com/en-us/magazine/ff797918.aspx">
			https://msdn.microsoft.com/en-us/magazine/ff797918.aspx
		</a>
	</li>
	<li>
		<a href="https://msdn.microsoft.com/en-us/library/ms178199%28v=vs.85%29.aspx">
			https://msdn.microsoft.com/en-us/library/ms178199%28v=vs.85%29.aspx
		</a>
	</li>
</ul>

<!-- please add a screenshot -->
<img src="viewstate.png" /> <!-- image path is relative to the report xml file -->
</technicaldescription>

<impact>
An attacker could obtain sensitive information for information gathering.
</impact>

<recommendation>
<p>Add the following property to the ASP.NET page directive or the application's web.config file:</p>
<pre>&lt;%@ Page ViewStateEncryptionMode="Always" %&gt;
or inside the Webconfig:
&lt;configuration&gt;
    &lt;system.web&gt;
      &lt;pages viewStateEncryptionMode="Always"&gt;</pre>
</recommendation>
<recommendation_summary>
<p>Activate ViewState encryption in the ASP.NET page directive or the application's web.config file.</p>
</recommendation_summary>
</finding>