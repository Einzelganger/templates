#!/usr/bin/env bash
#
# Convert xml file with xsl stylesheet to pdf document
# @author: Deborah Maaijen
#
# GPL 3+ licensed
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.


#modify this if needed 
declare -r XCONF='/etc/fop/conf/rosfop.xconf'
declare -r SAXON_JAR='/opt/saxon/saxon9he.jar'
declare -r PDF_READER='xdg-open' #opens the default PDF program
declare -r REFRESH=60 #refresh rate in seconds for the PDF

#don't modify unless you know what you're doing
###############################################
# Arguments: *.xml Optional *.pdf
# Returns: none
##############################################
declare -r USAGE='Usage: convertxmltopdf myfile.xml [/path/to/report.pdf]'
declare -r WHATIS='Creates a PDF file from the given offer or report XML files.
 By default it uses the document type and date as the PDF name'  

converter(){
  local -i ret_value=0
  local xmlname="$1"
  local xslname=""

  if [ $xmlname == 'report.xml' ]; then
		xslname='../xslt/generate_report.xsl'
  elif [ $xmlname == 'offerte.xml' ] || [ $xmlname == 'offerte-basic.xml' ]; then
		xslname='../xslt/generate_offerte.xsl'
  else 
    echo "please run this script inside the source directory."
    echo "when not generating a report or offerte, modify this script"
	exit 1
  fi
  local report_fo=$(mktemp)                                         #use a temp file
  java -jar $SAXON_JAR -s:$xmlname -xsl:$xslname -o:$report_fo -xi  #create a .fo file
  if [[ "$?" -eq 0 ]]; then                                         #if the .fo file was created
    local pdfname='../target/'$(_getPdfname $xmlname $2)            #set the given PDF name or the date
    fop -c $XCONF $report_fo $pdfname >&2                           #create a pdf file from the fo file
    rm -f "$report_fo"                                              #delete the temp file
    $PDF_READER "$pdfname"                                          #open the PDF
  else
    ret_value+=1 
  fi
  return $ret_value
}

_getPdfname(){
  local pdfname=$1
  pdfname=$(echo "$pdfname" | cut -d'.' -f1)
  if [ $# -eq 2 ];then
    pdfname=$2
  else
    local datum=$(date +"%Y-%m-%d_%H")
    pdfname="$pdfname.fo.$datum"
  fi
  echo "$pdfname"".pdf" 
  return 0 
}

main(){
  local -i state=0 
  if [ $# -eq 1 ] && [ $1 == '-h' ]; then 
    echo "$WHATIS"
    state+=1
  elif [[ $1 != *.xml || $# -gt 2 ]]; then 
    echo "$USAGE"
    state+=1
  else
    while [[ $state -eq 0 ]]; do # if no errors occur, recompile PDF	
      state=$(converter "$@")
      sleep $REFRESH
    done
  fi
}

main "$@"
